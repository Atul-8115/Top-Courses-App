{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dot Batch\\\\Day-36 ( React-Project-top-courses)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [name, setName] = useState('love');\n\n  // Variaton 1\n  // useEffect( () => {\n  //   console.log(\"UI RENDERING DONE\");\n  // })\n\n  // Variation-2 -> First Render\n  // useEffect (() => {\n  //   console.log(\"UI RENDERING DONE\");\n  // },[]);\n\n  // Variation 3 -> on first render + whenever dependency changes\n  // useEffect (() => {\n  //   console.log(\"Text ki value changed\")\n  // },[name]);\n\n  // Variation 4 ->  to handle unmounting of a component\n  useEffect(() => {\n    // add event listener\n    console.log(\"Listener added\");\n    return () => {\n      console.log(\"Listener removed\");\n    };\n  }, [text]);\n  function changeHandler(event) {\n    console.log(text);\n    setText(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qIOVv8qCBajgkjdPhj8smJeoenc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","jsxDEV","_jsxDEV","App","_s","text","setText","name","setName","console","log","changeHandler","event","target","value","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Dot Batch/Day-36 ( React-Project-top-courses)/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction App() {\n\n  const[text,setText] = useState('');\n  const[name,setName] = useState('love');\n\n  // Variaton 1\n  // useEffect( () => {\n  //   console.log(\"UI RENDERING DONE\");\n  // })\n\n  // Variation-2 -> First Render\n  // useEffect (() => {\n  //   console.log(\"UI RENDERING DONE\");\n  // },[]);\n\n\n  // Variation 3 -> on first render + whenever dependency changes\n  // useEffect (() => {\n  //   console.log(\"Text ki value changed\")\n  // },[name]);\n\n  // Variation 4 ->  to handle unmounting of a component\n  useEffect( () => {\n    // add event listener\n    console.log(\"Listener added\");\n\n    return () => {\n      console.log(\"Listener removed\");\n    }\n  },[text])\n  function changeHandler(event) {\n    console.log(text);\n    setText(event.target.value);\n  }\n  return (\n    <div className=\"App\">\n       <input type='text' onChange={changeHandler}></input>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAK,CAACQ,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;;EAEtC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;;EAEA;EACAC,SAAS,CAAE,MAAM;IACf;IACAS,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAE7B,OAAO,MAAM;MACXD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC;EACH,CAAC,EAAC,CAACL,IAAI,CAAC,CAAC;EACT,SAASM,aAAaA,CAACC,KAAK,EAAE;IAC5BH,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjBC,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EACA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eACjBd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEP;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD;AAEV;AAAClB,EAAA,CAvCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}